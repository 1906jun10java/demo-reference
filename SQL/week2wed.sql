--FUNCTIONS
/*FUNCTIONS ARE A BLOCK OF CODE WE CAN EXECUTE
THEY MUST RETURN ONE AND ONLY VALUE
CAN HAVE 0+ PARAMETERS
FUNCTIONS CAN CALL OTHER FUNCTIONS
CANNOT CALL STORED PROCEDURES
NO TRANSACTIONS OR DML
*/
CREATE OR REPLACE FUNCTION CALC_TAX
(T_ID IN NUMBER, TAX IN NUMBER)
RETURN NUMBER AS 
TOTAL_PRICE NUMBER(10,2);
BEGIN
SELECT UNITPRICE INTO TOTAL_PRICE
FROM TRACK
WHERE TRACKID=T_ID;
RETURN TOTAL_PRICE +(TOTAL_PRICE*TAX);
END;
/

--TO USE OUR FUNCTION
SELECT CALC_TAX(2921,.08) FROM DUAL;
--STORED PROCEDURES
/* BLOCK OF CODE WE CAN EXECUTE
SUPPORT MULTIPLE IN, OUT AND IN/OUT PARAMETERS
CALL OTHER STORED PROCEDURES, BUT NOT FUNCTIONS
CAN DO TRANSACTIONS AND DML
CANNOT DO DDL

CREATE PROCEDURE [name]
[parameters] AS
[variable declarations]
BEGIN
--LOGIC
COMMIT;
END;
 */
 CREATE TABLE GUITARS(
 GNAME VARCHAR2(20)
)

CREATE OR REPLACE PROCEDURE GUITARINSERT
(NAME IN VARCHAR2)
AS
BEGIN
INSERT INTO GUITARS VALUES(NAME);
COMMIT;
END;
/

--USE STORED PROCEDURE
EXECUTE GUITARINSERT('LES PAUL');









